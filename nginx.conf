user nginx nginx;

pid /var/run/nginx.pid;

events {
    worker_connections 2048; # Adjust based on server capacity
    accept_mutex on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    server_tokens off; # Hide Nginx version and reduce exposure

    # MIME Type Optimization
    types_hash_max_size 2048;
    types_hash_bucket_size 128;

    # Enable GZIP Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_min_length 256;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/javascript application/javascript application/json application/xml image/svg+xml;
    gzip_disable "MSIE [1-6]\.";

    # Client and File Upload Limits
    client_max_body_size 256M;

    # Caching for Static Files
    open_file_cache max=1000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=10r/s;

    # SSL/TLS Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256';
    ssl_ecdh_curve X25519:secp521r1:secp384r1;
    ssl_prefer_server_ciphers on;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # SSL Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem; # Change accordingly
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # Diffie-Hellman Parameters
    ssl_dhparam /etc/nginx/ssl/dhparam.pem;

    # Security Headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Expect-CT "enforce, max-age=86400" always;
    add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;

    # Block Invalid Host Headers
    map $http_host $allowed_host {
        default 0;
        "example.com" 1; # Change accordingly
        "www.example.com" 1; # Change accordingly
    }

    server {
        listen 80;
        server_name example.com www.example.com; # Change accordingly

        if ($allowed_host = 0) {
            return 444;
        }

        return 301 https://$host$request_uri; # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl http2;
        server_name example.com www.example.com; # Change accordingly

        root /var/www/html; # Change accordingly
        index index.php index.html;

        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # Change accordingly
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # Change accordingly

        if ($allowed_host = 0) {
            return 444;
        }

        # Exclude Static Files from Rate Limiting
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot|webp)$ {
            expires max;
            access_log off;
            log_not_found off;
            add_header Cache-Control "public, no-transform";
        }

        # Secure PHP Execution
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_index index.php;

            # FastCGI Optimization
            fastcgi_buffers 16 16k;
            fastcgi_buffer_size 32k;
            fastcgi_busy_buffers_size 48k;
            fastcgi_temp_file_write_size 48k;
            fastcgi_connect_timeout 60s;
            fastcgi_send_timeout 60s;
            fastcgi_read_timeout 60s;
        }

        # Protect Sensitive Files
        location ~* ^/(wp-config.php|readme.html|license.txt|.env) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}

